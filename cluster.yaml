apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: raycluster-gpu
  namespace: default
spec:
  headGroupSpec:
    serviceType: NodePort
    rayStartParams:
      ray-client-server-port: '10001'
      dashboard-host: '0.0.0.0'
      dashboard-port: '8265'
      include-dashboard: 'true'
      num-gpus: '0'  # Head 节点不占用 GPU
    template:
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: NotIn
                  values:
                  - g341 # gpu node 9
                  - g345 # gpu node 10
                  - g346 # gpu node 11
                  - g350 # gpu node 12
                  - g368 # gpu node 13
                  - g369 # gpu node 14
                  - g375 # gpu node 15
                  - g376 # gpu node 16
        runtimeClassName: nvidia  # 使用 NVIDIA 运行时类来访问设备文件
        # 添加主机名解析，解决 SGLang 127.0.1.1 连接问题
        hostAliases:
        - ip: "127.0.0.1"
          hostnames:
          - "127.0.1.1"
        securityContext:
          runAsUser: 0    # 以 root 用户运行
          runAsGroup: 0   # 以 root 组运行
          fsGroup: 0      # 设置文件系统组
        # 添加 initContainer 修复权限
        initContainers:
        - name: fix-data-permissions
          image: busybox:1.35
          command: ['sh', '-c']
          args:
          - |
            echo "Fixing permissions for /data/post_train..."
            chown -R 0:0 /data/post_train || true
            chmod -R 775 /data/post_train || true
            echo "Permission fix completed"
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
          - mountPath: /data
            name: data-volume
        containers:
        - image: zhuzilin/slime:20250731-v1
          name: ray-head
          # 不需要额外的安全权限，nvidia 运行时类会处理设备访问
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          env:
          - name: RAY_DASHBOARD_DISABLE_PY_SPY
            value: "1"
          ports:
          - containerPort: 8265
            name: dashboard
            protocol: TCP
          - containerPort: 6379
            name: redis
            protocol: TCP
          - containerPort: 10001
            name: client
            protocol: TCP
          resources:
            limits:
              memory: "32Gi"  # 适当增加head节点内存支持管理功能
              ephemeral-storage: "20Gi"
            requests:
              memory: "8Gi"   # 保持较低请求，为worker预留空间
              ephemeral-storage: "5Gi"
          volumeMounts:
          - mountPath: /data
            name: data-volume
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        volumes:
        - hostPath:
            path: /data
            type: Directory
          name: data-volume
  workerGroupSpecs:
  - groupName: gpu-workers
    replicas: 8
    template:
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: NotIn
                  values:
                  - g341 # gpu node 9
                  - g345 # gpu node 10
                  - g346 # gpu node 11
                  - g350 # gpu node 12
                  - g368 # gpu node 13
                  - g369 # gpu node 14
                  - g375 # gpu node 15
                  - g376 # gpu node 16      
        runtimeClassName: nvidia  # 使用 NVIDIA 运行时类来访问设备文件
        # 添加主机名解析，解决 SGLang 127.0.1.1 连接问题
        hostAliases:
        - ip: "127.0.0.1"
          hostnames:
          - "127.0.1.1"
        securityContext:
          runAsUser: 0    # 以 root 用户运行
          runAsGroup: 0   # 以 root 组运行
          fsGroup: 0      # 设置文件系统组
        # 添加 initContainer 修复权限
        initContainers:
        - name: fix-data-permissions
          image: busybox:1.35
          command: ['sh', '-c']
          args:
          - |
            echo "Fixing permissions for /data/post_train..."
            chown -R 0:0 /data/post_train || true
            chmod -R 775 /data/post_train || true
            echo "Permission fix completed"
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
          - mountPath: /data
            name: data-volume
        containers:
        - image: zhuzilin/slime:20250731-v1
          name: ray-worker
          # 不需要额外的安全权限，nvidia 运行时类会处理设备访问
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          env:
          - name: CUDA_HOME
            value: "/usr/local/cuda-12.6"
          - name: LD_LIBRARY_PATH
            value: "/usr/local/nvidia-host/lib64:/usr/local/nvidia/lib64:/usr/local/nvidia/lib:/usr/local/cuda-12.6/lib64"
          - name: NVIDIA_REQUIRE_CUDA
            value: "cuda>=12.1 driver>=470"
          - name: RAY_DASHBOARD_DISABLE_PY_SPY
            value: "1"
          # SGLang 服务器配置
          - name: SGLANG_SERVER_HOST
            value: "127.0.0.1"
          - name: SGLANG_SERVER_PORT
            value: "4635"
          # SGLang Router 端口配置 - 使用固定端口避免冲突
          - name: SGLANG_ROUTER_HOST
            value: "127.0.0.1"
          - name: SGLANG_ROUTER_PORT
            value: "4016"  # 明确设置 router 端口
          # 禁用 Prometheus metrics 导出器避免端口冲突
          - name: SGLANG_DISABLE_METRICS
            value: "true"
          - name: SGLANG_METRICS_PORT
            value: "0"  # 禁用 metrics 端口
          # SGLang 性能优化配置
          - name: TORCHINDUCTOR_CACHE_DIR
            value: "/tmp/torchinductor_cache"
          # SGLang 内存优化配置 - 为checkpoint预留更多内存
          - name: SGLANG_MEM_FRACTION_STATIC
            value: "0.75"  # 降低GPU内存使用，为checkpoint预留空间
          # SGLang 并行配置 (8个GPU使用张量并行)
          - name: SGLANG_TP_SIZE
            value: "8"
          # SGLang 性能调优
          - name: SGLANG_CHUNKED_PREFILL_SIZE
            value: "8192"
          - name: SGLANG_MAX_PREFILL_TOKENS
            value: "32768"
          # SGLang CUDA 图优化
          - name: SGLANG_DISABLE_CUDA_GRAPH
            value: "false"
          - name: SGLANG_CUDA_GRAPH_MAX_BS
            value: "256"
          # 设置 SGLang 进程标识符，避免多进程冲突
          - name: SGLANG_PROCESS_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          resources:
            limits:
              nvidia.com/gpu: 8
              memory: "950Gi"  # 最大化内存，为大模型checkpoint预留充足空间
              ephemeral-storage: "380Gi"  # 最大化临时存储，checkpoint可能需要大量磁盘空间
            # 使用合理的requests，确保调度成功
            requests:
              nvidia.com/gpu: 8  # 确保GPU资源预留
              memory: "500Gi"    # 提高内存请求，确保checkpoint有足够空间
              ephemeral-storage: "50Gi"
          volumeMounts:
          - mountPath: /data
            name: data-volume
          - name: host-nvidia-libs
            mountPath: /usr/local/nvidia-host/lib64
            readOnly: true
          # SGLang 需要的共享内存
          - name: dshm
            mountPath: /dev/shm
        tolerations:
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Exists
        volumes:
        - hostPath:
            path: /data
            type: Directory
          name: data-volume
        - name: host-nvidia-libs
          hostPath:
            path: /usr/lib/x86_64-linux-gnu
        # SGLang 需要的共享内存
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi 
